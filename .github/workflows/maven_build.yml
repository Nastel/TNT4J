# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 8, 11, 15 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml --no-transfer-progress

  cleanup:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Remove tnt4j assets
        uses: actions/delete-package-versions@v1
        with:
          owner: 'Nastel'
          repo: 'TNT4J'
          package-name: 'tnt4j'
          token: ${{ secrets.GITHUB_PAT }}
      - name: Remove tnt4j-core assets
        uses: actions/delete-package-versions@v1
        with:
          owner: 'Nastel'
          repo: 'TNT4J'
          package-name: 'tnt4j-core'
          token: ${{ secrets.GITHUB_PAT }}
      - name: Remove tnt4j-kafka-sink assets
        uses: actions/delete-package-versions@v1
        with:
          owner: 'Nastel'
          repo: 'TNT4J'
          package-name: 'tnt4j-kafka-sink'
          token: ${{ secrets.GITHUB_PAT }}
      - name: Remove tnt4j-mqtt-sink assets
        uses: actions/delete-package-versions@v1
        with:
          owner: 'Nastel'
          repo: 'TNT4J'
          package-name: 'tnt4j-mqtt-sink'
          token: ${{ secrets.GITHUB_PAT }}

  publish-snapshot:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up settings.xml for GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish SNAPSHOT version to GitHub Packages
        run: mvn -B deploy -DskipTests --file pom.xml --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
